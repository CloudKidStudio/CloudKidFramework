import {ApplicationPlugin} from '@springroll/core';
import Captions from '../Captions';
// @if DEBUG
import {Debug} from '@springroll/debug';
// @endif

(function() {

    const plugin = new ApplicationPlugin('captions');

    //Initialize
    plugin.setup = function() {
        /**
         * The path to the captions file to preload.
         * ### module: @springroll/captions
         * @member {string} captionsPath
         * @memberof springroll.ApplicationOptions#
         * @default null
         * @readOnly
         */
        this.options.add('captionsPath', null, true);

        /**
         * The global captions object.
         * ### module: @springroll/captions
         * @member {springroll.Captions} captions
         * @memberof springroll.Application#
         */
        this.captions = new Captions();
    };

    //Preload the captions
    plugin.preload = function(done) {

        //Give the player a reference
        if (this.voPlayer) {
            this.voPlayer.captions = this.captions;
        }

        // Create the captions, if it doesn't exist
        let textField = document.getElementById(Captions.CAPTIONS_ID);

        // If the text field does not exist, then create it
        // and add it to either the current display or the body
        if (!textField) {
            textField = document.createElement('div');
            textField.id = Captions.CAPTIONS_ID;
            textField.dataset.autogenerated = true;

            // Add the text field by insert into the display
            // add into the displayElement container, or else add to the body
            const parent = this.displayElement || document.body;
            parent.appendChild(textField);
        }

        this.captions.textField = textField;
        const captionsPath = this.options.captionsPath;
        if (captionsPath) {
            this.load(captionsPath, data => {
                this.captions.data = data;
                done();
            });
        }
        else {
            // @if DEBUG
            Debug.info('Application option \'captionsPath\' is empty, set to automatically load captions JSON');
            // @endif
            done();
        }
    };

    //Destroy the animator
    plugin.teardown = function() {

        // Remove the text field if it was added
        const {textField} = this.captions;
        if (textField.dataset.autogenerated) {
            textField.parentNode.removeChild(textField);
        }

        if (this.captions) {
            this.captions.destroy();
            this.captions = null;
        }
    };

}());